/* stylelint-disable */

$browser-context: 16; // Default

@function rem($pixels, $context: $browser-context) {
	@return #{$pixels/$context}rem;
}

@mixin image-set($pathToImage) {
	background-image: url('#{$pathToImage}.jpg');
	background-image: image-set('#{$pathToImage}.webp' type('image/webp'), '#{$pathToImage}.jpg' type('image/jpg'));
}

@mixin image-set-png($pathToImage) {
	background-image: url('#{$pathToImage}.png');
	background-image: image-set('#{$pathToImage}.webp' type('image/webp'), '#{$pathToImage}.png' type('image/png'));
}

@mixin footerToBottom {
	display: grid;
	grid-template-columns: 100%;
	grid-template-rows: auto 1fr auto;
	min-height: 100vh;
}

@mixin hover {
	@media (any-hover: hover) {
		&:hover {
			@content;
		}
	}
}

@mixin bg-cover {
	background-position: center;
	background-size: cover;
	background-repeat: no-repeat;
}

@mixin flex-v-center {
	display: flex;
	align-items: center;
}

@mixin flex-h-center {
	display: flex;
	justify-content: center;
}

@mixin flex-all-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

@mixin flex-all-sb {
	display: flex;
	align-items: center;
	justify-content: space-between;
}

@mixin flex-column-start {
	display: flex;
	flex-direction: column;
	align-items: start;
}

@mixin flex-column-center {
	display: flex;
	flex-direction: column;
	align-items: center;
}

@mixin flex-column-end {
	display: flex;
	flex-direction: column;
	align-items: end;
}

@mixin pseudo() {
	content: '';
	display: block;
}

@mixin burger {
	--burger-width: 30px;
	--burger-height: 20px;
	--burger-line-height: 2px;

	position: relative;
	border: none;
	padding: 0;
	width: var(--burger-width);
	height: var(--burger-height);
	background-color: transparent;
	cursor: pointer;

	&::before,
	&::after {
		content: '';
		position: absolute;
		left: 0;
		width: 100%;
		height: var(--burger-line-height);
		background-color: currentColor;
		transition:
			transform 0.3s ease-in-out,
			top 0.3s ease-in-out;
	}

	&::before {
		top: 0;
	}

	&::after {
		top: calc(100% - var(--burger-line-height));
	}

	&__line {
		position: absolute;
		left: 0;
		top: 50%;
		width: 100%;
		height: var(--burger-line-height);
		background-color: currentColor;
		transform: translateY(-50%);
		transition: transform 0.3s ease-in-out;
	}

	&--active {
		&::before {
			top: 50%;
			transform: rotate(45deg);
			transition:
				transform 0.3s ease-in-out,
				top 0.3s ease-in-out;
		}

		&::after {
			top: 50%;
			transform: rotate(-45deg);
			transition:
				transform 0.3s ease-in-out,
				top 0.3s ease-in-out;
		}

		.burger__line {
			transform: scale(0);
			transition: transform 0.3s ease-in-out;
		}
	}
}
